<?xml version="1.0" encoding="utf-8"?>
<template>
	<name>mapper</name>
	<project>server</project>
	<filePath>src/main/resources/mapper/${moduleName}</filePath>
	<fileName>${ClassName}Mapper.xml</fileName>
	<content><![CDATA[
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="${packageName}.server.${moduleName}.dao.${ClassName}Mapper" >
  	<resultMap id="BaseResultMap" type="${packageName}.client.${moduleName}.dto.${ClassName}" >
	<#list table.columnList as c>
	<#if c.isPk == "1">
		<id column="${c.name}" property="${c.javaFieldId}" jdbcType="${c.jdbcType}" />
	</#if>
	<#if c.isPk == "0">
		<result column="${c.name}" property="${c.javaFieldId}" jdbcType="${c.jdbcType}" />
	</#if>
	</#list>
  	</resultMap>
  	<sql id="Base_Column_List" >
  	<#assign insertField>
  	<#list table.columnList as c>${c.name}, </#list>
  	</#assign>
  	${insertField?substring(0, insertField?last_index_of(","))}
  	</sql>
	<sql id="condition" >
    	<if test="null!=params" >
    		<#list table.columnList as c>
      		<if test="params.${c.javaFieldId} != null<#if c.simpleJavaType == 'String'> and '' != params.${c.javaFieldId}</#if>" >
        		and ${c.name} = ${"#"}{params.${c.javaFieldId},jdbcType=${c.jdbcType}}
      		</if>
      		</#list>
      	</if>
  	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" >
		select 
		<include refid="Base_Column_List" />
		from ${table.name} 
		where id = ${"#"}{id,jdbcType=INTEGER}
	</select>
	<select id="selectByParams" resultMap="BaseResultMap" parameterType="map" >
		select 
		<include refid="Base_Column_List" />
		from ${table.name}
		<where>
			<include refid="${packageName}.server.${moduleName}.dao.${ClassName}ChildMapper.condition" />
		</where>
	</select>
	<select id="selectOne" resultMap="BaseResultMap" parameterType="map" >
		select 
		<include refid="Base_Column_List" />
		from ${table.name}
		<where>
			<include refid="${packageName}.server.${moduleName}.dao.${ClassName}ChildMapper.condition" />
		</where>
		limit 0,1
	</select>
	<select id="selectCount" resultType="java.lang.Integer" >
	  	select count(1) as s from ${table.name}  
		<where>
	  		<include refid="${packageName}.server.${moduleName}.dao.${ClassName}ChildMapper.condition" />
	  	</where>
	</select>
	<select id="selectByPage" resultMap="BaseResultMap" parameterType="com.towcent.base.common.page.SimplePage" >
	  	select 
	  	<include refid="Base_Column_List" />
	  	from ${table.name} 
	  	<where>
	  	<include refid="${packageName}.server.${moduleName}.dao.${ClassName}ChildMapper.condition" />
	  	</where>
	  	<if test="orderByField != null and ''!=orderByField" >
	    	order by ${"$"}{orderByField} 
	    	<if test="orderByField" >
	      	${"$"}{orderBy}
	    	</if>
	  	</if>
	  	limit ${"#"}{startRowNum} ,${"#"}{pageSize}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
	  	delete from ${table.name}
	  	where id = ${"#"}{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="${packageName}.client.${moduleName}.dto.${ClassName}" useGeneratedKeys="true" keyProperty="id">
    	insert into ${table.name} (
		<#assign insertField>
		<#list table.columnList as c>
			${c.name},
		</#list>
		</#assign>
		${insertField?substring(0, insertField?last_index_of(","))}
    	)
    	values (
    	<#assign insertJavaField>
    	<#list table.columnList as c>
			${"#"}{${c.javaFieldId},jdbcType=${c.jdbcType}},
		</#list>
		</#assign>
		${insertJavaField?substring(0, insertJavaField?last_index_of(","))}
		)
  	</insert>
	<insert id="insertSelective" parameterType="${packageName}.client.${moduleName}.dto.${ClassName}" useGeneratedKeys="true" keyProperty="id" >
    	insert into ${table.name} 
    	<trim prefix="(" suffix=")" suffixOverrides="," >
      	<#list table.columnList as c>
      		<if test="${c.javaFieldId} != null<#if c.simpleJavaType == 'String'> and '' != ${c.javaFieldId}</#if>" >
      			${c.name},
      		</if>
	  	</#list>
    	</trim>
    	<trim prefix="values (" suffix=")" suffixOverrides="," >
      	<#list table.columnList as c>
      		<if test="${c.javaFieldId} != null<#if c.simpleJavaType == 'String'> and '' != ${c.javaFieldId}</#if>" >
	  			${"#"}{${c.javaFieldId},jdbcType=${c.jdbcType}},
	  		</if>
	  	</#list>
    	</trim>
  	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="${packageName}.client.${moduleName}.dto.${ClassName}" >
    	update ${table.name} 
	    <set>
	    	<#list table.columnList as c>
	      	<if test="${c.javaFieldId} != null<#if c.simpleJavaType == 'String'> and '' != ${c.javaFieldId}</#if>" >
	        	${c.name} = ${"#"}{${c.javaFieldId},jdbcType=${c.jdbcType}},
	      	</if>
	      	</#list>
    	</set>
    	where id = ${"#"}{id,jdbcType=INTEGER}
  	</update>
  	<update id="updateByPrimaryKey" parameterType="${packageName}.client.${moduleName}.dto.${ClassName}" >
    	update ${table.name} 
    	set 
      	<#assign updateField>
      	<#list table.columnList as c>
      		${c.name} = ${"#"}{${c.javaFieldId},jdbcType=${c.jdbcType}},
      	</#list>
      	</#assign>
      	${updateField?substring(0, updateField?last_index_of(","))} 
    	where id = ${"#"}{id,jdbcType=INTEGER}
  	</update>
</mapper>]]>
	</content>
</template>